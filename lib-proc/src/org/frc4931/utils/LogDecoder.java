/*
 * FRC 4931 (http://www.evilletech.com)
 *
 * Open source software. Licensed under the FIRST BSD license file in the
 * root directory of this project's Git repository.
 */
package org.frc4931.utils;
import java.io.BufferedInputStream;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;

/**
 * Utility to process data logs generated by strongback into human readable csv format.
 * 
 * <h1>Log file format:</h1>
 * <p>
 * The first three bytes are the ASCII log ({@code 6C 6F 67}). The next byte is the number of elements that have 
 * been logged {@code n}. The next {@code n} bytes are the number of bytes in each data point, followed by 
 * {@code n} repetitions of the length of the name of each data point and the name itself in ASCII bytes.
 * <p>
 * Now the data is recorded with respect to the number of bytes in each element. 
 * When Logger is stopped it will finish writing the line it is on and then the terminator: {@code FF FF FF FF}.
 * 
 * <h1>Example log file:</h1>
 * <pre> {@code [l o g] 
 * [3] 
 * [4] [2] [2] 
 * [4][T i m e] [3][F o o] [3][B a r]
 * [00 00 00 00] [00 52] [00 37]
 * [00 00 00 0A] [04 D5] [23 AF]
 * [00 00 00 14] [3F 00] [12 34]
 * [FF FF FF FF]
 * }</pre>
 * 
 * <h1>Output CSV format:</h1>
 * <p>
 * The first row contains the names of the elements as encoded into the log file, delimited by a comma. The end
 * of the row is delimited by a newline character. Each following line lists the integer value of the data encoded,
 * to the precision specified in the log file.
 * 
 * <h1>Example csv file:</h1>
 * <pre> {@code Time, Foo, Bar
 * 0, 82, 55,
 * 10, 1237, 9135,
 * 20, 16128, 4660
 * }</pre>
 * 
 * @author Zach Anderson
 *
 */
public class LogDecoder {
    // TODO Use terminal arguments for in and out file
    public static void main(String[] args) {
        try {
            File file = new File("robot.log");
            DataInputStream in = new DataInputStream(new BufferedInputStream(new FileInputStream(file)));
            File out = new File("robot.csv");
            BufferedWriter writer = new BufferedWriter(new FileWriter(out));
            
            // Verify Header
            byte[] header = new byte[3];
            in.read(header);
            if(!Arrays.equals(header, "log".getBytes())){
                System.err.println("File format not recognized");
                System.exit(2);
            }
            
            // Get the number of elements
            int numElements = in.read();
            
            // Get the size of each element
            int[] elementSizes = new int[numElements];
            for(int i = 0; i< elementSizes.length; i++)
                elementSizes[i] = in.read();
            
            // Write the name of each element
            for(int i = 0; i< numElements; i++) {
                int nameSize = in.read();
                byte[] b = new byte[nameSize];
                in.read(b);
                writer.write(new String(b) + ", ");
            }
            writer.newLine();
            
            // Read each record
            in.mark(4);
            while(in.readInt()!=0xFFFFFFFF){
                in.reset();
                for(int i = 0; i < numElements; i++){
                    if(elementSizes[i]==4){
                        writer.write(in.readInt() + ", ");
                    }
                    else if(elementSizes[i]==2)
                        writer.write(in.readShort() + ", ");
                }
                writer.newLine();
                in.mark(4);
            }
            writer.close();
            in.close();
        } catch (FileNotFoundException e) {
            System.err.println("Log file not found");
            System.exit(1);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

}
